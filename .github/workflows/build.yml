name: Kernel Build

on:
  workflow_dispatch:
#  schedule:
#    - cron: 0 8 * * 5

env:
  REPO_URL: https://github.com/fw867/pve-edge-kernel.git
  REPO_BRANCH: master
  CONFIG_FILE: .config
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: Checkout
      uses: actions/checkout@master
    
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo apt-get update
        sudo apt-get install devscripts debhelper equivs git dwarves
        sudo apt-get autoremove --purge
        sudo apt-get clean

    - name: Clone source code
      run: |
        git clone $REPO_URL
        cd pve-edge-kernel
        git submodule update --init --depth=1 --recursive linux
        git submodule update --init --recursive

    - name: Compile the PVE kernel
      id: compile
      run: |
        cd pve-edge-kernel
        scripts/update.sh -t linux-5.15.y
        debian/rules debian/control
        sudo mk-build-deps -i
        debuild -ePVE* --jobs=auto -b -uc -us
        echo "::set-output name=status::success"

    - name: Start SSH via Ngrok
      env:
        NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
        USER_PASS: ${{ secrets.USER_PASS }}
      if:  ${{ failure() }}
      run: curl -sL https://gist.githubusercontent.com/retyui/7115bb6acf151351a143ec8f96a7c561/raw/7099b9db76729dc5761da72aa8525f632d8875c9/debug-github-actions.sh | bash

    - name: Don't kill instace
      if:  ${{ failure() }}
      run: sleep 4h

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2-preview
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: alldebs
        path: "*.deb"

    - name: Delete Debug Symbols
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      run: |
        #tar czf Dbgsym.tar.gz *dbgsym*.deb
        #rm -f *dbgsym*.deb
        tar czf Releasedebs.tar.gz *.deb

    - name: Format Release Name
      id: format_release
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      run: |
        cd pve-edge-kernel
        release=$(scripts/version.sh)
        echo "::set-output name=release::$release"
        changelog=$(dpkg-parsechangelog -c 1 -l debian/changelog)
        changelog="${changelog//'%'/'%25'}"
        changelog="${changelog//$'\n'/'%0A'}"
        changelog="${changelog//$'\r'/'%0D'}"
        echo "::set-output name=changelog::$changelog"
 
    - name: Create Release
      uses: ncipollo/release-action@v1
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        commit: ${{ github.sha }}
        tag: v${{ steps.format_release.outputs.release }}
        body: ${{ steps.format_release.outputs.changelog }}
        token: ${{ secrets.RElEASE_TOKEN }}
        artifacts: "Releasedebs.tar.gz"
